{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hamzeh/Downloads/Music/src/screens/AlbumsScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport happi from \"../api/happi.js\";\nimport { useIsFocused } from \"@react-navigation/native\";\n\nvar AlbumsScreen = function AlbumsScreen(navigation) {\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setError = _useState4[1];\n\n  var artistId = 204;\n\n  var albums = function albums() {\n    var response;\n    return _regeneratorRuntime.async(function albums$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(happi.get(\"/music/artists/\" + artistId + \"/albums\", {\n              params: {\n                apikey: '42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.result.albums);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(\"somthing went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  if (navigation.route.params) {\n    artistId = navigation.route.params.id_artist;\n    useEffect(function () {\n      albums(artistId);\n    }, [navigation, isFocused]);\n  }\n\n  useEffect(function () {\n    albums(26688);\n  }, []);\n  console.log(\"results\", results);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, React.createElement(FlatList, {\n    showsHorizontalScrollIndicator: false,\n    data: results,\n    keyExtractor: function keyExtractor(result) {\n      return result.id_album.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.cover\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, item.album));\n    },\n    numColumns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 36,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  name: {\n    fontWeight: 'bold',\n    marginBottom: 4,\n    fontSize: 18,\n    width: 300,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  image: {\n    marginTop: 40,\n    width: 300,\n    height: 300,\n    resizeMode: 'contain'\n  }\n});\nexport default AlbumsScreen;","map":{"version":3,"sources":["/Users/hamzeh/Downloads/Music/src/screens/AlbumsScreen.js"],"names":["React","useState","useEffect","happi","useIsFocused","AlbumsScreen","navigation","isFocused","results","setResults","errorMsg","setError","artistId","albums","get","params","apikey","response","data","result","route","id_artist","console","log","styles","container","id_album","toString","item","alignItems","image","uri","cover","name","album","StyleSheet","create","marginTop","justifyContent","title","fontSize","fontWeight","marginBottom","width","textAlign","height","resizeMode"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport  {View , Text, StyleSheet, FlatList, Image} from 'react-native';\nimport happi from '../api/happi.js'\nimport { useIsFocused } from \"@react-navigation/native\";\n\nconst AlbumsScreen = (navigation) =>   {\n    const isFocused = useIsFocused();\n    const [results,setResults] = useState([]);\n    const [errorMsg,setError] = useState('');\n    let  artistId = 204;\n\n    const albums = async () => {\n        try{\n\n            const response = await happi.get(`/music/artists/${artistId}/albums`, {\n                params:{\n                    apikey:'42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p',\n                }\n\n            });\n            setResults(response.data.result.albums);\n\n        }\n        catch(err){\n\n          setError(\"somthing went wrong\")\n        }\n\n    };\n\n\n    if(navigation.route.params){\n        artistId = navigation.route.params.id_artist;\n\n        useEffect(() => {\n            albums(artistId)\n\n          }, [navigation, isFocused])\n    }\n        useEffect(()=>{\n            albums(26688)\n        },[])\n\n        console.log(\"results\",results)\n    return(\n   <View style={styles.container}>\n        <FlatList\n        showsHorizontalScrollIndicator={false}\n        data={results}\n        keyExtractor={result=>result.id_album.toString()}\n        renderItem={({item})=>{\n            return(\n                  <View style={{alignItems:'center' }}>\n                    <Image style={styles.image}  source={{uri:item.cover}}/>\n                    <Text style={styles.name}>{item.album}</Text>\n                  </View>\n            );\n        }}\n        numColumns={1}\n        />\n\n      </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        marginTop:36,\n        justifyContent: 'center',\n        alignItems: 'center',\n        },\n      title:{\n        fontSize:18,\n        fontWeight:'bold',\n        marginBottom:10\n      },\n      name:{\n        fontWeight:'bold',\n        marginBottom:4,\n        fontSize:18,\n        width:300,\n        textAlign:'center',\n        marginTop:10\n      },\n      image:{\n        marginTop:40,\n        width: 300,\n        height: 300,\n        resizeMode:'contain'\n    }\n    });\nexport default AlbumsScreen;"]},"metadata":{},"sourceType":"module"}