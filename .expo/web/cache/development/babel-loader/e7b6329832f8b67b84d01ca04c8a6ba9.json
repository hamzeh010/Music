{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hamzeh/Downloads/Music/src/screens/ArtistsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport happi from \"../api/happi\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ArtistsScreen = function ArtistsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setError = _useState4[1];\n\n  var artists = function artists() {\n    var response;\n    return _regeneratorRuntime.async(function artists$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(happi.get('/music/artists', {\n              params: {\n                page: 1,\n                apikey: '42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.result);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(\"somthing went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var _Dimensions$get = Dimensions.get('screen'),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  useEffect(function () {\n    artists();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, React.createElement(FlatList, {\n    showsHorizontalScrollIndicator: false,\n    data: results,\n    keyExtractor: function keyExtractor(result) {\n      return result.id_artist.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('Albums', item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          padding: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.cover\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: styles.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, item.artist)));\n    },\n    numColumns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 36,\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'white',\n    padding: 10\n  }, StyleSheet.absoluteFillObject),\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  name: {\n    fontWeight: 'bold',\n    marginBottom: 4,\n    fontSize: 16,\n    width: 180,\n    textAlign: 'center',\n    marginTop: 7\n  },\n  rate: {\n    color: 'gray',\n    fontSize: 12\n  },\n  image: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    width: '100%',\n    height: 200,\n    resizeMode: 'contain',\n    margin: 10,\n    padding: 10\n  }\n});\nexport default ArtistsScreen;","map":{"version":3,"sources":["/Users/hamzeh/Downloads/Music/src/screens/ArtistsScreen.js"],"names":["React","useState","useEffect","happi","ArtistsScreen","navigation","results","setResults","errorMsg","setError","artists","get","params","page","apikey","response","data","result","Dimensions","width","height","styles","container","id_artist","toString","item","navigate","alignItems","padding","image","uri","cover","name","artist","StyleSheet","create","justifyContent","marginTop","position","top","backgroundColor","absoluteFillObject","title","fontSize","fontWeight","marginBottom","textAlign","rate","color","resizeMode","margin"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport  {View ,Text,StyleSheet,ScrollView,FlatList,TouchableOpacity,Image,SafeAreaView,StatusBar} from 'react-native';\nimport happi from '../api/happi'\nimport {  Dimensions } from 'react-native';\n\nconst ArtistsScreen = ({navigation}) =>   {\n\n    const [results,setResults] = useState([]);\n    const [errorMsg,setError] = useState('');\n\n    const artists = async () => {\n        try{\n            const response = await happi.get('/music/artists', {\n                params:{\n                    page:1,\n                    apikey:'42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p',\n                }\n\n            });\n\n            setResults(response.data.result);\n\n        }\n        catch(err){\n\n          setError(\"somthing went wrong\")\n        }\n\n    };\n    const { width, height } = Dimensions.get('screen');\n    useEffect(()=>{\n        artists()\n    },[])\n    return(\n   <View style={styles.container}>\n\n        <FlatList\n        showsHorizontalScrollIndicator={false}\n        data={results}\n\n        keyExtractor={result=>result.id_artist.toString()}\n        renderItem={({item})=>{\n            return(\n              <TouchableOpacity\n              onPress={() => {\n                navigation.navigate('Albums',item);\n              }}\n              >\n                  <View style={{alignItems:'center', padding:10}}>\n                  <Image style={styles.image}  source={{uri:item.cover}}/>\n                  <Text style={styles.name}>{item.artist}</Text>\n                  </View>\n\n              </TouchableOpacity>\n            );\n        }}\n        numColumns={2}\n        />\n\n      </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container:{\n      justifyContent: 'center',\n        alignItems: 'center',\n        marginTop:36,\n        position:'absolute',\n        top:0,\n        backgroundColor:'white',\n        padding:10,\n        ...StyleSheet.absoluteFillObject,\n\n        },\n      title:{\n        fontSize:18,\n        fontWeight:'bold',\n        marginBottom:10\n      },\n      name:{\n        fontWeight:'bold',\n        marginBottom:4,\n        fontSize:16,\n        width:180,\n        textAlign:'center',\n        marginTop:7\n\n      },\n      rate:{\n        color:'gray',\n        fontSize:12\n      },\n      image:{\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop:10,\n        width:'100%',\n        height:200,\n        resizeMode:'contain',\n        margin:10,\n        padding:10\n    }\n    });\nexport default ArtistsScreen;"]},"metadata":{},"sourceType":"module"}