{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useRef } from 'react';\nimport happi from \"../api/happi\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var mountedRef = useRef(true);\n\n  var tempoApi = function tempoApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function tempoApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(happi.get('/music/bpm/playlist/80-90', {\n              params: {\n                tempo: \"80-90\",\n                limit: 50,\n                apikey: '42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.tracks);\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    tempoApi('sia');\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return [results];\n});","map":{"version":3,"sources":["/Users/hamzeh/Downloads/Music/src/hooks/tempoResults.ts"],"names":["useState","useEffect","useRef","happi","results","setResults","mountedRef","tempoApi","searchTerm","get","params","tempo","limit","apikey","response","data","tracks","current"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,KAAP;AAGA,gBAAe,YAAM;AAAA,kBAEYH,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,MAEVI,OAFU;AAAA,MAEFC,UAFE;;AAGjB,MAAMC,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;;AAEA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcL,KAAK,CAACM,GAAN,CAAU,2BAAV,EAAuC;AAC1DC,cAAAA,MAAM,EAAC;AACHC,gBAAAA,KAAK,EAAC,OADH;AAEHC,gBAAAA,KAAK,EAAC,EAFH;AAGHC,gBAAAA,MAAM,EAAC;AAHJ;AADmD,aAAvC,CAFd;;AAAA;AAEHC,YAAAA,QAFG;AASTT,YAAAA,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAV;AATS;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAgBAf,EAAAA,SAAS,CAAC,YAAI;AACVM,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,WAAO,YAAM;AACTD,MAAAA,UAAU,CAACW,OAAX,GAAqB,KAArB;AACD,KAFH;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,SAAO,CAACb,OAAD,CAAP;AACH,CA7BD","sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport happi from '../api/happi';\n\n\nexport default () => {\n\n    const [results,setResults] = useState([]);\n    const mountedRef = useRef(true);\n\n    const tempoApi = async searchTerm => {\n        try{\n            const response = await happi.get('/music/bpm/playlist/80-90', {\n                params:{\n                    tempo:\"80-90\",\n                    limit:50,\n                    apikey:'42405dFzin2GNUB68DBOOniGJLng7JMKBTGzosIyjGiEDUjuWj1GNv8p',\n                }\n            });\n            setResults(response.data.tracks);\n        }\n        catch(err){\n\n        }\n\n    };\n    useEffect(()=>{\n        tempoApi('sia');\n        return () => {\n            mountedRef.current = false;   // clean up function\n          }\n    },[])\n\n    return [results];\n};"]},"metadata":{},"sourceType":"module"}