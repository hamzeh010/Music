{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hamzeh/Downloads/Music/src/screens/SearchScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"./Components/SearchBar\";\nimport useResults from \"../hooks/useResults.ts\";\nimport getTracks from \"../hooks/getTracks.ts\";\nimport ResultsList from \"./Components/ResultsList\";\n\nvar SearchScreen = function SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useResults = useResults(),\n      _useResults2 = _slicedToArray(_useResults, 3),\n      results = _useResults2[0],\n      searchApi = _useResults2[1],\n      errorMsg = _useResults2[2];\n\n  var _tempoApi = tempoApi(),\n      _tempoApi2 = _slicedToArray(_tempoApi, 1),\n      tracks = _tempoApi2[0];\n\n  return React.createElement(View, {\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: function onTermSubmit() {\n      return searchApi(term);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(ResultsList, {\n    title: \"Made For You\",\n    results: tracks,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), React.createElement(ResultsList, {\n    title: \"Popular albums\",\n    results: results,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), React.createElement(ResultsList, {\n    title: \"Music to stay up to date\",\n    results: tracks,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(ResultsList, {\n    title: \"New releases for you\",\n    results: results,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  background: _objectSpread({\n    marginTop: 36,\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'white'\n  }, StyleSheet.absoluteFillObject)\n});\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/hamzeh/Downloads/Music/src/screens/SearchScreen.js"],"names":["React","useState","SearchBar","useResults","getTracks","ResultsList","SearchScreen","navigation","term","setTerm","results","searchApi","errorMsg","tempoApi","tracks","styles","background","StyleSheet","create","marginTop","position","top","backgroundColor","absoluteFillObject"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAlBC,UAAkB,QAAlBA,UAAkB;;AAAA,kBACdN,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,MAC9BO,IAD8B;AAAA,MACzBC,OADyB;;AAAA,oBAEAN,UAAU,EAFV;AAAA;AAAA,MAE9BO,OAF8B;AAAA,MAEtBC,SAFsB;AAAA,MAEZC,QAFY;;AAAA,kBAGpBC,QAAQ,EAHY;AAAA;AAAA,MAG9BC,MAH8B;;AAKrC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAER,IADN;AAEA,IAAA,YAAY,EAAEC,OAFd;AAGA,IAAA,YAAY,EAAE;AAAA,aAAIE,SAAS,CAACH,IAAD,CAAb;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAG,cAArB;AAAoC,IAAA,OAAO,EAAEM,MAA7C;AAAqD,IAAA,UAAU,EAAEP,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,gBAAnB;AAAoC,IAAA,OAAO,EAAEG,OAA7C;AAAsD,IAAA,UAAU,EAAEH,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,0BAAnB;AAA8C,IAAA,OAAO,EAAEO,MAAvD;AAA+D,IAAA,UAAU,EAAEP,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,sBAAnB;AAA0C,IAAA,OAAO,EAAEG,OAAnD;AAA4D,IAAA,UAAU,EAAEH,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CALJ,CADJ;AAcH,CAnBD;;AAqBA,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,UAAU;AACNG,IAAAA,SAAS,EAAC,EADJ;AAENC,IAAAA,QAAQ,EAAC,UAFH;AAGNC,IAAAA,GAAG,EAAC,CAHE;AAINC,IAAAA,eAAe,EAAC;AAJV,KAKHL,UAAU,CAACM,kBALR;AADmB,CAAlB,CAAf;AASA,eAAejB,YAAf","sourcesContent":["import React,{useState} from 'react';\nimport  {View, StyleSheet, ScrollView} from 'react-native';\nimport SearchBar from './Components/SearchBar';\nimport useResults from '../hooks/useResults.ts';\nimport getTracks from '../hooks/getTracks.ts';\nimport ResultsList from './Components/ResultsList';\n\nconst SearchScreen = ({navigation}) =>   {\n    const [term,setTerm] = useState('');\n    const [results,searchApi,errorMsg] = useResults();\n    const [tracks] = tempoApi();\n\n    return(\n        <View style={styles.background}>\n            <SearchBar\n            term={term}\n            onTermChange={setTerm}\n            onTermSubmit={()=>searchApi(term)}/>\n            <ScrollView>\n            <ResultsList title = \"Made For You\" results={tracks} navigation={navigation}/>\n            <ResultsList title=\"Popular albums\" results={results} navigation={navigation}/>\n            <ResultsList title=\"Music to stay up to date\" results={tracks} navigation={navigation}/>\n            <ResultsList title=\"New releases for you\" results={results} navigation={navigation}/>\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    background:{\n        marginTop:36,\n        position:'absolute',\n        top:0,\n        backgroundColor:'white',\n        ...StyleSheet.absoluteFillObject\n    }\n});\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}